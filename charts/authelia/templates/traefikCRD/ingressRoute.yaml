{{ if (include "authelia.traefikCRD.ingressRoute.enabled" .) -}}
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ include "authelia.name" . }}
  labels: {{ include "authelia.labels" (merge (dict "Labels" .Values.ingress.labels) .) | nindent 4 }}
  {{- with $annotations := include "authelia.annotations" (merge (dict "Annotations" .Values.ingress.annotations) .) }}
  annotations: {{ $annotations | nindent 4 }}
  {{- end }}
spec:
  {{- with $entryPoints := default (list "http") .Values.ingress.traefikCRD.entryPoints }}
  entryPoints: {{- toYaml $entryPoints | nindent 4 }}
  {{- end }}
  routes:
    - kind: Rule
      match: {{ .Values.ingress.traefikCRD.matchOverride | default (printf "Host(`%s`) && PathPrefix(`%s`)" (include "authelia.ingress.host" .) (include "authelia.path" .)) }}
      priority: {{ .Values.ingress.traefikCRD.priority | default 10 }}
      middlewares:
        - name: {{ include "authelia.traefikCRD.middleware.chain.ingress.name" . }}
          namespace: {{ .Release.Namespace }}
      services:
        - kind: Service
          name: {{ include "authelia.name" . }}
          port: {{ include "authelia.service.port" . }}
          namespace: {{ .Release.Namespace }}
          passHostHeader: true
          strategy: {{ .Values.ingress.traefikCRD.strategy | default "RoundRobin" }}
          scheme: http
          weight: {{ .Values.ingress.traefikCRD.weight | default 10 }}
          responseForwarding:
            flushInterval: {{ .Values.ingress.traefikCRD.responseForwardingFlushInterval | default "100ms" }}
          {{- if .Values.ingress.traefikCRD.sticky.enabled }}
          sticky:
            cookie:
              httpOnly: true
              name: {{ .Values.ingress.traefikCRD.sticky.cookieNameOverride | default (printf "%s_traefik_lb" (include "authelia.name" .)) }}
              secure: true
              sameSite: None
  {{- end }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
    {{- if hasKey .Values.ingress.traefikCRD.tls "certResolver" }}
    certResolver: {{ default "default" .Values.ingress.traefikCRD.tls.certResolver }}
    domains:
      - main: {{ .Values.ingress.tls.hostNameOverride | default (include "authelia.ingress.host" .) }}
        {{- if .Values.ingress.traefikCRD.tls.sans }}
        sans: {{- toYaml .Values.ingress.traefikCRD.tls.sans | nindent 10 }}
        {{- end }}
    {{- else }}
    secretName: {{ default (printf "%s-traefik-tls" (include "authelia.name" .)) .Values.ingress.tls.secret }}
    {{- end }}
    {{- if not (eq .Values.ingress.traefikCRD.tls.disableTLSOptions true) }}
    options:
      {{- if (include "authelia.traefikCRD.tlsOption.existing" .) }}
      name: {{ .Values.ingress.traefikCRD.tlsOptions.existing.name }}
      namespace: {{ .Values.ingress.traefikCRD.tlsOptions.existing.namespace | default .Release.Namespace }}
      {{- else }}
      name: {{ default (include "authelia.name" .) .Values.ingress.traefikCRD.tlsOptions.nameOverride }}
      namespace: {{ .Release.Namespace }}
    {{- end }}
    {{- end }}
  {{- end }}
  {{- end -}}
