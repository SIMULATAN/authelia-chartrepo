{{- if include "authelia.vaultInjector.enabled" . -}}
{{- with $vault := .Values.secret.vaultInjector -}}
vault.hashicorp.com/agent-inject: "true"
{{- if $vault.role }}
vault.hashicorp.com/role: {{ $vault.role | default "authelia" }}
{{- end }}
{{- if $vault.agent.status }}
vault.hashicorp.com/agent-inject-status: {{ $vault.agent.status | default "update" }}
{{- end }}
{{- if $vault.agent.configMap }}
vault.hashicorp.com/agent-configmap: {{ $vault.agent.configMap }}
{{- end }}
{{- if $vault.agent.image }}
vault.hashicorp.com/agent-image: {{ $vault.agent.image }}
{{- end }}
{{- if $vault.agent.initFirst }}
vault.hashicorp.com/agent-init-first: {{ $vault.agent.initFirst | quote }}
{{- end }}
{{- if $vault.agent.command }}
vault.hashicorp.com/agent-inject-command: {{ $vault.agent.command | quote }}
{{- end }}
vault.hashicorp.com/secret-volume-path: {{ include "authelia.secret.mountPath" $ }}
vault.hashicorp.com/agent-inject-secret-jwt: {{ include "authelia.vaultInjector.path" $vault.secrets.jwt.path }}
vault.hashicorp.com/agent-inject-file-jwt: {{ include "authelia.secret.path" (merge (dict "Secret" "jwt") $) }}
{{- if $vault.secrets.jwt.templateValue }}
vault.hashicorp.com/agent-inject-template-jwt: {{ $vault.secrets.jwt.templateValue | quote }}
{{- else if $vault.secrets.jwt.path }}
vault.hashicorp.com/agent-inject-template-jwt: {{ include "authelia.vaultInjector.template" $vault.secrets.jwt.path | quote }}
{{- end }}
{{- if $vault.secrets.jwt.command }}
vault.hashicorp.com/agent-inject-command-jwt: {{ $vault.secrets.jwt.command | quote }}
{{- end }}
vault.hashicorp.com/agent-inject-secret-session: {{ include "authelia.vaultInjector.path" $vault.secrets.session.path }}
vault.hashicorp.com/agent-inject-file-session: {{ include "authelia.secret.path" (merge (dict "Secret" "session") $) }}
{{- if $vault.secrets.session.templateValue }}
vault.hashicorp.com/agent-inject-template-session: {{ $vault.secrets.session.templateValue | quote }}
{{- else if $vault.secrets.session.path }}
vault.hashicorp.com/agent-inject-template-session: {{ include "authelia.vaultInjector.template" $vault.secrets.session.path | quote }}
{{- end }}
{{- if $vault.secrets.session.command }}
vault.hashicorp.com/agent-inject-command-session: {{ $vault.secrets.session.command | quote }}
{{- end }}
{{- if $.Values.configMap.authentication_backend.ldap.enabled }}
vault.hashicorp.com/agent-inject-secret-ldap: {{ include "authelia.vaultInjector.path" $vault.secrets.ldap.path }}
vault.hashicorp.com/agent-inject-file-ldap: {{ include "authelia.secret.path" (merge (dict "Secret" "ldap") $) }}
{{- if $vault.secrets.ldap.templateValue }}
vault.hashicorp.com/agent-inject-template-ldap: {{ $vault.secrets.ldap.templateValue | quote }}
{{- else if $vault.secrets.ldap.path }}
vault.hashicorp.com/agent-inject-template-ldap: {{ include "authelia.vaultInjector.template" $vault.secrets.ldap.path | quote }}
{{- end }}
{{- if $vault.secrets.ldap.command }}
vault.hashicorp.com/agent-inject-command-ldap: {{ $vault.secrets.ldap.command | quote }}
{{- end }}
{{- end }}
vault.hashicorp.com/agent-inject-secret-storage-encryption-key: {{ include "authelia.vaultInjector.path" $vault.secrets.storageEncryptionKey.path }}
vault.hashicorp.com/agent-inject-file-storage-encryption-key: {{ include "authelia.secret.path" (merge (dict "Secret" "storageEncryptionKey") $) }}
{{- if $vault.secrets.storageEncryptionKey.templateValue }}
vault.hashicorp.com/agent-inject-template-storage-encryption-key: {{ $vault.secrets.storageEncryptionKey.templateValue | quote }}
{{- else if $vault.secrets.storageEncryptionKey.path }}
vault.hashicorp.com/agent-inject-template-storage-encryption-key: {{ include "authelia.vaultInjector.template" $vault.secrets.storageEncryptionKey.path | quote }}
{{- end }}
{{- if $vault.secrets.storageEncryptionKey.command }}
vault.hashicorp.com/agent-inject-command-storage-encryption-key: {{ $vault.secrets.storageEncryptionKey.command | quote }}
{{- end }}
{{- if or $.Values.configMap.storage.mysql.enabled $.Values.configMap.storage.postgres.enabled }}
vault.hashicorp.com/agent-inject-secret-storage: {{ include "authelia.vaultInjector.path" $vault.secrets.storage.path }}
vault.hashicorp.com/agent-inject-file-storage: {{ include "authelia.secret.path" (merge (dict "Secret" "storage") $) }}
{{- if $vault.secrets.storage.templateValue }}
vault.hashicorp.com/agent-inject-template-storage: {{ $vault.secrets.storage.templateValue | quote }}
{{- else if $vault.secrets.storage.path }}
vault.hashicorp.com/agent-inject-template-storage: {{ include "authelia.vaultInjector.template" $vault.secrets.storage.path | quote }}
{{- end }}
{{- if $vault.secrets.storage.command }}
vault.hashicorp.com/agent-inject-command-storage: {{ $vault.secrets.storage.command | quote }}
{{- end }}
{{- end }}
{{- if and $.Values.configMap.session.redis.enabled $.Values.configMap.session.redis.enabledSecret }}
vault.hashicorp.com/agent-inject-secret-redis: {{ include "authelia.vaultInjector.path" $vault.secrets.redis.path }}
vault.hashicorp.com/agent-inject-file-redis: {{ include "authelia.secret.path" (merge (dict "Secret" "redis") $) }}
{{- if $vault.secrets.redis.templateValue }}
vault.hashicorp.com/agent-inject-template-redis: {{ $vault.secrets.redis.templateValue | quote }}
{{- else if $vault.secrets.redis.path }}
vault.hashicorp.com/agent-inject-template-redis: {{ include "authelia.vaultInjector.template" $vault.secrets.redis.path | quote }}
{{- end }}
{{- if $vault.secrets.redis.command }}
vault.hashicorp.com/agent-inject-command-redis: {{ $vault.secrets.redis.command | quote }}
{{- end }}
{{- if and $.Values.configMap.session.redis.high_availability.enabled $.Values.configMap.session.redis.high_availability.enabledSecret }}
vault.hashicorp.com/agent-inject-secret-redis-sentinel: {{ include "authelia.vaultInjector.path" $vault.secrets.redisSentinel.path }}
vault.hashicorp.com/agent-inject-file-redis-sentinel: {{ include "authelia.secret.path" (merge (dict "Secret" "redis-sentinel") $) }}
{{- if $vault.secrets.redisSentinel.templateValue }}
vault.hashicorp.com/agent-inject-template-redis-sentinel {{ $vault.secrets.redisSentinel.templateValue | quote }}
{{- else if $vault.secrets.redisSentinel.path }}
vault.hashicorp.com/agent-inject-template-redis-sentinel: {{ include "authelia.vaultInjector.template" $vault.secrets.redisSentinel.path | quote }}
{{- end }}
{{- if $vault.secrets.redisSentinel.command }}
vault.hashicorp.com/agent-inject-command-redis-sentinel: {{ $vault.secrets.redisSentinel.command | quote }}
{{- end }}
{{- end }}
{{- end }}
{{- if and $.Values.configMap.notifier.smtp.enabled $.Values.configMap.notifier.smtp.enabledSecret }}
vault.hashicorp.com/agent-inject-secret-smtp: {{ include "authelia.vaultInjector.path" $vault.secrets.smtp.path }}
vault.hashicorp.com/agent-inject-file-smtp: {{ include "authelia.secret.path" (merge (dict "Secret" "smtp") $) }}
{{- if $vault.secrets.smtp.templateValue }}
vault.hashicorp.com/agent-inject-template-smtp: {{ $vault.secrets.smtp.templateValue | quote }}
{{- else if $vault.secrets.smtp.path }}
vault.hashicorp.com/agent-inject-template-smtp: {{ include "authelia.vaultInjector.template" $vault.secrets.smtp.path | quote }}
{{- end }}
{{- if $vault.secrets.smtp.command }}
vault.hashicorp.com/agent-inject-command-smtp: {{ $vault.secrets.smtp.command | quote }}
{{- end }}
{{- end }}
{{- if include "authelia.duo.enabled" $ }}
vault.hashicorp.com/agent-inject-secret-duo: {{ include "authelia.vaultInjector.path" $vault.secrets.duo.path }}
vault.hashicorp.com/agent-inject-file-duo: {{ include "authelia.secret.path" (merge (dict "Secret" "duo") $) }}
{{- if $vault.secrets.duo.templateValue }}
vault.hashicorp.com/agent-inject-template-duo: {{ $vault.secrets.duo.templateValue | quote }}
{{- else if $vault.secrets.duo.path }}
vault.hashicorp.com/agent-inject-template-duo: {{ include "authelia.vaultInjector.template" $vault.secrets.duo.path | quote }}
{{- end }}
{{- if $vault.secrets.duo.command }}
vault.hashicorp.com/agent-inject-command-duo: {{ $vault.secrets.duo.command | quote }}
{{- end }}
{{- end }}
{{- if $.Values.configMap.identity_providers.oidc.enabled }}
vault.hashicorp.com/agent-inject-secret-oidc-private-key: {{ include "authelia.vaultInjector.path" $vault.secrets.oidcPrivateKey.path }}
vault.hashicorp.com/agent-inject-file-oidc-private-key: {{ include "authelia.secret.path" (merge (dict "Secret" "oidc-private-key") $) }}
{{- if $vault.secrets.oidcPrivateKey.templateValue }}
vault.hashicorp.com/agent-inject-template-oidc-private-key: {{ $vault.secrets.oidcPrivateKey.templateValue | quote }}
{{- else if $vault.secrets.oidcPrivateKey.path }}
vault.hashicorp.com/agent-inject-template-oidc-private-key: {{ include "authelia.vaultInjector.template" $vault.secrets.oidcPrivateKey.path | quote }}
{{- end }}
{{- if $vault.secrets.oidcPrivateKey.command }}
vault.hashicorp.com/agent-inject-command-oidc-private-key: {{ $vault.secrets.oidcPrivateKey.command | quote }}
{{- end }}
vault.hashicorp.com/agent-inject-secret-oidc-hmac-secret: {{ include "authelia.vaultInjector.path" $vault.secrets.oidcHMACSecret.path }}
vault.hashicorp.com/agent-inject-file-oidc-hmac-secret: {{ include "authelia.secret.path" (merge (dict "Secret" "oidc-hmac-secret") $) }}
{{- if $vault.secrets.oidcHMACSecret.templateValue }}
vault.hashicorp.com/agent-inject-template-oidc-hmac-secret: {{ $vault.secrets.oidcHMACSecret.templateValue | quote }}
{{- else if $vault.secrets.oidcHMACSecret.path }}
vault.hashicorp.com/agent-inject-template-oidc-hmac-secret: {{ include "authelia.vaultInjector.template" $vault.secrets.oidcHMACSecret.path | quote }}
{{- end }}
{{- if $vault.secrets.oidcHMACSecret.command }}
vault.hashicorp.com/agent-inject-command-oidc-hmac-secret: {{ $vault.secrets.oidcHMACSecret.command | quote }}
{{- end }}
{{- end }}
vault.hashicorp.com/agent-run-as-same-user: {{ default "true" $vault.agent.runAsSameUser | quote }}
{{- if $.Values.secret.annotations }}
{{- toYaml $.Values.secret.annotations | nindent 0 }}
{{- end }}
{{- end }}
{{- end }}